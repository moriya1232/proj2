Index: main.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include <iostream>\n#include \"BFS.h\"\n#include \"Matrix.h\"\n#include <vector>\n#include <sstream>\n#include \"MatrixHandler.h\"\n\nnamespace  create_script {\n    static void writeScript() {\n        ofstream script(\"script.txt\", ios::app);\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                script << rand() % 100;\n                script << ' ';\n            }\n            script << '\\n';\n        }\n        script.close();\n    }\n\n    static vector<string> split(vector<string> v, const std::string& s, char delimiter)\n    {\n        string token;\n        istringstream tokenStream(s);\n        while (getline(tokenStream, token, delimiter))\n        {\n            v.push_back(token);\n        }\n        return v;\n    }\n\n    static void clearFile(string filename) {\n        ofstream inFile;\n        inFile.open(filename, ofstream::out | ofstream::trunc);\n        inFile.close();\n    }\n\n    static int getNumberOfLines(string filename) {\n        ifstream inFile(filename);\n        int count = 0;\n        string line = \"\";\n        if (inFile.is_open()) {\n            getline(inFile, line);\n            while (line != \"\") {\n                getline(inFile, line);\n                count++;\n            }\n        }\n        return count;\n    }\n\n    static int getNumberOfColumns(string filename) {\n        ifstream inFile(filename);\n        string line = \"\";\n        vector<string> vec;\n        if (inFile.is_open()) {\n            getline(inFile, line);\n            vec = split(vec, line, ' ');\n            return vec.size();\n        }\n    }\n\n    static vector<vector<int>> readMatrixFromScript(string filename) {\n        ifstream inFile(filename);\n        int i = 0, n = getNumberOfLines(filename);\n        vector<vector<int>> vec;\n        string line = \"\";\n        vector<string> v;\n        vector<int> tempVector;\n        // open the file\n        if (inFile.is_open()) {\n            getline(inFile, line);\n            while (i < n) {\n                v = split(v, line, ' ');\n                for (vector<string>::iterator it = v.begin(); it != v.end(); it++) {\n                    string tempString = *it;\n                    int bla = stoi(tempString);\n                    tempVector.push_back(bla);\n                }\n                vec.push_back(tempVector);\n                tempVector.clear();\n                v.clear();\n                getline(inFile, line);\n                i++;\n            }\n        }\n        return vec;\n    }\n\n    static string convertListStateToString(list<State*> list1 , Searchable* searchable){\n        string result=\"\";\n\n        for (list<State*>:: iterator it = list1.begin(); it!=(list1.end()); ++it){\n            if ( it == list1.end()) {\n                return result;\n            }\n\n            State after = (**(++it));\n            it--;\n            if (after.getState()->getI()> (*it)->getState()->getI()) {\n                result+=\"down\";\n            } else if (after.getState()->getI() < (*it)->getState()->getI()) {\n                result+=\"up\";\n            } else if (after.getState()->getJ()> (*it)->getState()->getJ()) {\n                result+=\"right\";\n            } else if (after.getState()->getJ()< (*it)->getState()->getJ()) {\n                result+=\"left\";\n            }\n            result+=\",\";\n        }\n        result = result.substr(0,result.length()-2);\n        return result;\n    }\n\n    static void printMatrix(vector<vector<int>> arr, string str) {\n        for (int i = 0;i < 3; i++) {\n            for (int j=0; j< 3; j++) {\n                cout << arr[i][j] << \" \";\n            }\n            cout << \"\" << endl;\n        }\n        cout << \"\" << endl;\n        cout << \"And the best path for you is: \" << str << endl;\n    }\n}\n\nint main() {\n    // JUST A REPLACEMENT FOR THE REAL SCRIPT\n    create_script::writeScript();\n    CacheManager* cm = new(nothrow) CacheManager();\n    vector<vector<int>> arr = create_script::readMatrixFromScript(\"script.txt\");\n    Matrix* m = new (nothrow) Matrix(arr, 3, 3);\n    //system(\"open\");\n    MatrixSolver<Matrix*, list<State*>>* ms = new(nothrow) MatrixSolver<Matrix*, list<State*>>();\n    list<State*> result1 = ms->solve(m);\n    string result2 = create_script::convertListStateToString(result1, m);\n    create_script::printMatrix(arr, result2);\n    MatrixHandler<Matrix*, MatrixSolver<Matrix*, list<State*>>*>* ch = new (nothrow)\n            MatrixHandler<Matrix*, MatrixSolver<Matrix*, list<State*>>*>(ms , cm, m);\n    //std::cout << \"Hello, World!\" << std::endl;\n    create_script::clearFile(\"script.txt\");\n    return 0;\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- main.cpp	(revision 203db0e82cdec70c64ae5e1a0f767aea85527113)
+++ main.cpp	(date 1547082525000)
@@ -135,8 +135,8 @@
     list<State*> result1 = ms->solve(m);
     string result2 = create_script::convertListStateToString(result1, m);
     create_script::printMatrix(arr, result2);
-    MatrixHandler<Matrix*, MatrixSolver<Matrix*, list<State*>>*>* ch = new (nothrow)
-            MatrixHandler<Matrix*, MatrixSolver<Matrix*, list<State*>>*>(ms , cm, m);
+    //MatrixHandler<Matrix*, MatrixSolver<Matrix*, list<State*>>*>* ch = new (nothrow)
+      //      MatrixHandler<Matrix*, MatrixSolver<Matrix*, list<State*>>*>(ms , cm, m);
     //std::cout << "Hello, World!" << std::endl;
     create_script::clearFile("script.txt");
     return 0;
Index: cmake-build-debug/CMakeFiles/proj2.dir/CXX.includecache
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#IncludeRegexLine: ^[ \t]*[#%][ \t]*(include|import)[ \t]*[<\"]([^\">]+)([\">])\n\n#IncludeRegexScan: ^.*$\n\n#IncludeRegexComplain: ^$\n\n#IncludeRegexTransform: \n\n/home/moriya/CLionProjects/untitled6/BFS.h\nSearcher.h\n/home/moriya/CLionProjects/untitled6/Searcher.h\nSearchable.h\n/home/moriya/CLionProjects/untitled6/Searchable.h\nvector\n-\n\n/home/moriya/CLionProjects/untitled6/CacheManager.h\nunordered_map\n-\nMyPair.h\n/home/moriya/CLionProjects/untitled6/MyPair.h\n\n/home/moriya/CLionProjects/untitled6/ClientHandler.h\niostream\n-\nfstream\n-\nSolver.h\n/home/moriya/CLionProjects/untitled6/Solver.h\nCacheManager.h\n/home/moriya/CLionProjects/untitled6/CacheManager.h\n\n/home/moriya/CLionProjects/untitled6/ISearcher.h\nSearchable.h\n/home/moriya/CLionProjects/untitled6/Searchable.h\nSearcher.h\n/home/moriya/CLionProjects/untitled6/Searcher.h\nstring\n/home/moriya/CLionProjects/untitled6/string\n\n/home/moriya/CLionProjects/untitled6/Matrix.h\nState.h\n/home/moriya/CLionProjects/untitled6/State.h\nlist\n-\nstring\n-\nvector\n-\nSearchable.h\n/home/moriya/CLionProjects/untitled6/Searchable.h\n\n/home/moriya/CLionProjects/untitled6/MatrixHandler.h\nlist\n-\nClientHandler.h\n/home/moriya/CLionProjects/untitled6/ClientHandler.h\nMatrix.h\n/home/moriya/CLionProjects/untitled6/Matrix.h\nMatrixSolver.h\n/home/moriya/CLionProjects/untitled6/MatrixSolver.h\n\n/home/moriya/CLionProjects/untitled6/MatrixSolver.h\nMatrix.h\n/home/moriya/CLionProjects/untitled6/Matrix.h\nSolver.h\n/home/moriya/CLionProjects/untitled6/Solver.h\n\n/home/moriya/CLionProjects/untitled6/MyPair.h\nstring\n-\n\n/home/moriya/CLionProjects/untitled6/Point.h\n\n/home/moriya/CLionProjects/untitled6/Searchable.h\nlist\n/home/moriya/CLionProjects/untitled6/list\nState.h\n/home/moriya/CLionProjects/untitled6/State.h\n\n/home/moriya/CLionProjects/untitled6/Searcher.h\nSearchable.h\n/home/moriya/CLionProjects/untitled6/Searchable.h\nISearcher.h\n/home/moriya/CLionProjects/untitled6/ISearcher.h\n\n/home/moriya/CLionProjects/untitled6/Solver.h\nMatrix.h\n/home/moriya/CLionProjects/untitled6/Matrix.h\n\n/home/moriya/CLionProjects/untitled6/State.h\nlist\n-\nPoint.h\n/home/moriya/CLionProjects/untitled6/Point.h\n\n/home/moriya/CLionProjects/untitled6/main.cpp\niostream\n-\nBFS.h\n/home/moriya/CLionProjects/untitled6/BFS.h\nMatrix.h\n/home/moriya/CLionProjects/untitled6/Matrix.h\nvector\n-\nsstream\n-\nMatrixHandler.h\n/home/moriya/CLionProjects/untitled6/MatrixHandler.h\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cmake-build-debug/CMakeFiles/proj2.dir/CXX.includecache	(revision 203db0e82cdec70c64ae5e1a0f767aea85527113)
+++ cmake-build-debug/CMakeFiles/proj2.dir/CXX.includecache	(date 1547082526000)
@@ -60,6 +60,12 @@
 MatrixSolver.h
 /home/moriya/CLionProjects/untitled6/MatrixSolver.h
 
+/home/moriya/CLionProjects/untitled6/MatrixSolver.cpp
+MatrixSolver.h
+/home/moriya/CLionProjects/untitled6/MatrixSolver.h
+BFS.h
+/home/moriya/CLionProjects/untitled6/BFS.h
+
 /home/moriya/CLionProjects/untitled6/MatrixSolver.h
 Matrix.h
 /home/moriya/CLionProjects/untitled6/Matrix.h
@@ -69,6 +75,54 @@
 /home/moriya/CLionProjects/untitled6/MyPair.h
 string
 -
+
+/home/moriya/CLionProjects/untitled6/MyServer.cpp
+unistd.h
+-
+stdio.h
+-
+thread
+-
+netinet/in.h
+-
+string
+-
+string.h
+-
+errno.h
+-
+MyServer.h
+/home/moriya/CLionProjects/untitled6/MyServer.h
+list
+-
+MatrixHandler.h
+/home/moriya/CLionProjects/untitled6/MatrixHandler.h
+
+/home/moriya/CLionProjects/untitled6/MyServer.h
+Server.h
+/home/moriya/CLionProjects/untitled6/Server.h
+time.h
+-
+
+/home/moriya/CLionProjects/untitled6/ParallelServer.cpp
+thread
+-
+strings.h
+-
+string
+-
+ParallelServer.h
+/home/moriya/CLionProjects/untitled6/ParallelServer.h
+unistd.h
+-
+vector
+-
+sstream
+-
+
+/home/moriya/CLionProjects/untitled6/ParallelServer.h
+MyServer.h
+/home/moriya/CLionProjects/untitled6/MyServer.h
 
 /home/moriya/CLionProjects/untitled6/Point.h
 
@@ -84,6 +138,10 @@
 ISearcher.h
 /home/moriya/CLionProjects/untitled6/ISearcher.h
 
+/home/moriya/CLionProjects/untitled6/Server.h
+MatrixHandler.h
+/home/moriya/CLionProjects/untitled6/MatrixHandler.h
+
 /home/moriya/CLionProjects/untitled6/Solver.h
 Matrix.h
 /home/moriya/CLionProjects/untitled6/Matrix.h
